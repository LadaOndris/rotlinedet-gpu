
#include "../include/linedet.hpp"
#include <iostream>
#include <openacc.h>

void readImage(const std::string &imagePath, cv::Mat &image) {
    cv::Mat img = cv::imread(imagePath);
    image = img;
}

void convertBgrToGray(const cv::Mat &inImage, cv::Mat &outImage) {
    cv::cvtColor(inImage, outImage, cv::COLOR_BGR2GRAY);
}

void removeExtremeIntensities(const cv::Mat &inImage, cv::Mat &outImage) {
    outImage = inImage;
//
//    cv::Mat reshaped = inImage.reshape(1, 1);
//    auto begin = reshaped.begin<cv::uint8_t>();
//    auto end = reshaped.end<cv::uint8_t>();
//    auto center = begin + reshaped.total() / 2;
//    std::nth_element(begin, center, end);
//    std::cout << "\nThe median is " << reshaped.total() << '\n';
//    std::cout << "\nThe median is " << reshaped.at<cv::uint8_t>(reshaped.total() / 2) << '\n';
}

void convolveAverage(float **acc, int filterSize,
                     float **result) {
    // Convolve each image rotation
    for (int rot = 0; rot < NUM_ROTATIONS; rot++) {
        // Do the 1D convolution itself
        int halfFilterSize = filterSize / 2;
        for (int i = halfFilterSize; i < ACC_SIZE - halfFilterSize; i++) {
            // Sum values
            int firstConvIndex = i - halfFilterSize;
            for (int h = firstConvIndex; h < firstConvIndex + filterSize; h++) {
                result[rot][i] += acc[rot][h];
            }
            // Compute average by dividing by the number of values
            result[rot][i] /= filterSize;
        }
    }
}

void extractPeaks(float **acc,
                  float **average,
                  float **peaks) {
    // diff = acc - average
    // peaks = max(0, diff)
    for (int rot = 0; rot < NUM_ROTATIONS; rot++) {
        for (int col = 0; col < ACC_SIZE; col++) {
            float val = std::max(acc[rot][col], average[rot][col]);
            peaks[rot][col] = val - average[rot][col];
        }
    }
}

/**
 *
 * @param array
 *  The array on which the slopes are computed.
 * @param sideDistance
 *  Determines the distance between the values for which the
 *  slope is computed. It measures the distance from the center position to
 *  each side. E.g., windowSize = 2 indicates that
 *  the slope for index 2 will be computed between the 0th and the 4nd value.
 *  For index 5 it will be the 3rd and the 7th.
 */
void extractSlopes(float **array,
                   int sideDistance,
                   float **slopes) {
    for (int rot = 0; rot < NUM_ROTATIONS; rot++) {
        for (int col = 0; col < sideDistance; col++) {
            slopes[rot][col] = std::numeric_limits<float>::max();
        }
        for (int col = sideDistance; col < ACC_SIZE - sideDistance; col++) {
            float left = array[rot][col - sideDistance];
            float right = array[rot][col + sideDistance];
            float bigger = std::max(left, right);
            float smaller = std::min(left, right);
            slopes[rot][col] = bigger - smaller;
        }
        for (int col = ACC_SIZE - sideDistance; col < ACC_SIZE; col++) {
            slopes[rot][col] = std::numeric_limits<float>::max();
        }
    }
}

void selectPeaksUsingSlopes(float **peaks,
                            float **slopes,
                            float slopeThreshold,
                            float **selectedPeaks) {
    // Selects peak with the highest peak value above certain slope threshold
    // for each rotation
    for (int rot = 0; rot < NUM_ROTATIONS; rot++) {
        selectedPeaks[rot][0] = 0; // col
        selectedPeaks[rot][1] = 0; // peakValue

        float sum_peaks_below_threshold = 0;

        for (int col = 0; col < ACC_SIZE; col++) {
            if (slopes[rot][col] < slopeThreshold) {
                sum_peaks_below_threshold += peaks[rot][col];

                if (selectedPeaks[rot][1] < peaks[rot][col]) {
                    selectedPeaks[rot][0] = col;
                    selectedPeaks[rot][1] = peaks[rot][col];
                }
            }
        }
        float mean_peak_below_threshold = sum_peaks_below_threshold / ACC_SIZE;
        //selectedPeaks[rot][1] /= mean_peak_below_threshold;
    }
}

// 440 ms
void sumColumns(const unsigned char img[IMG_HEIGHT][IMG_WIDTH],
                const float rotations[NUM_ROTATIONS][2],
                unsigned int **acc) {

#pragma acc data copyin(img[:IMG_HEIGHT][:IMG_WIDTH])
    for (int rot = 0; rot < NUM_ROTATIONS; rot++) {
        auto acc_rot = acc[rot];
        auto rotation_col = rotations[rot][0];
        auto rotation_row = rotations[rot][1];
        {
#pragma acc parallel loop copy(acc_rot[:ACC_SIZE]) vector_length(512)
            for (int row = 0; row < IMG_HEIGHT; row++) {
#pragma acc loop
                for (int col = 0; col < IMG_WIDTH; col++) {

                    int col_shifted = col - HALF_IMG_WIDTH;
                    int row_shifted = row - HALF_IMG_HEIGHT;
                    float new_col_shifted = col_shifted * rotation_col + row_shifted * rotation_row;
                    int new_col = new_col_shifted + HALF_ACC_SIZE;
#pragma acc atomic update
                    acc_rot[new_col] += img[row][col];
                }
            }
        }
    }
}

/**
 * The image is rotated by predefined angles.
 *
 * The following angles of rotations are generated using scripts/rotations.py.
 *
 */
float rotations[NUM_ROTATIONS][2] = {
        { 0.19080899537654492, -0.981627183447664 },
        { 0.1993679344171972, -0.9799247046208296 },
        { 0.20791169081775945, -0.9781476007338056 },
        { 0.2164396139381029, -0.9762960071199334 },
        { 0.22495105434386514, -0.9743700647852352 },
        { 0.23344536385590547, -0.9723699203976766 },
        { 0.2419218955996679, -0.9702957262759965 },
        { 0.2503800040544415, -0.9681476403781077 },
        { 0.25881904510252096, -0.9659258262890682 },
        { 0.26723837607825696, -0.963630453208623 },
        { 0.27563735581699916, -0.9612616959383189 },
        { 0.28401534470392276, -0.958819734868193 },
        { 0.29237170472273677, -0.9563047559630354 },
        { 0.3007057995042733, -0.9537169507482268 },
        { 0.30901699437494745, -0.9510565162951535 },
        { 0.3173046564050923, -0.9483236552061993 },
        { 0.32556815445715676, -0.9455185755993167 },
        { 0.3338068592337711, -0.9426414910921783 },
        { 0.3420201433256688, -0.9396926207859083 },
        { 0.35020738125946743, -0.9366721892483976 },
        { 0.3583679495453004, -0.9335804264972017 },
        { 0.3665012267242973, -0.9304175679820246 },
        { 0.3746065934159122, -0.9271838545667873 },
        { 0.38268343236508984, -0.9238795325112867 },
        { 0.39073112848927394, -0.9205048534524403 },
        { 0.39874906892524625, -0.917060074385124 },
        { 0.4067366430758004, -0.9135454576426009 },
        { 0.41469324265623914, -0.9099612708765432 },
        { 0.42261826174069944, -0.9063077870366499 },
        { 0.43051109680829525, -0.9025852843498605 },
        { 0.43837114678907746, -0.898794046299167 },
        { 0.44619781310980894, -0.894934361602025 },
        { 0.4539904997395468, -0.8910065241883678 },
        { 0.4617486132350341, -0.8870108331782216 },
        { 0.46947156278589086, -0.8829475928589269 },
        { 0.47715876025960857, -0.8788171126619653 },
        { 0.4848096202463371, -0.8746197071393957 },
        { 0.4924235601034671, -0.8703556959398997 },
        { 0.5000000000000001, -0.8660254037844386 },
        { 0.5075383629607042, -0.8616291604415257 },
        { 0.5150380749100544, -0.8571673007021122 },
        { 0.5224985647159489, -0.8526401643540922 },
        { 0.5299192642332051, -0.8480480961564258 },
        { 0.5372996083468239, -0.8433914458128857 },
        { 0.5446390350150272, -0.8386705679454239 },
        { 0.5519369853120583, -0.8338858220671681 },
        { 0.5591929034707469, -0.8290375725550416 },
        { 0.5664062369248329, -0.8241261886220156 },
        { 0.5735764363510462, -0.8191520442889917 },
        { 0.5807029557109399, -0.8141155183563191 },
        { 0.5877852522924731, -0.8090169943749475 },
        { 0.5948227867513414, -0.8038568606172173 },
        { 0.6018150231520484, -0.7986355100472928 },
        { 0.6087614290087207, -0.7933533402912352 },
        { 0.6156614753256583, -0.7880107536067219 },
        { 0.6225146366376196, -0.7826081568524138 },
        { 0.6293203910498375, -0.7771459614569708 },
        { 0.6360782202777641, -0.7716245833877199 },
        { 0.6427876096865395, -0.7660444431189779 },
        { 0.6494480483301838, -0.7604059656000308 },
        { 0.6560590289905073, -0.754709580222772 },
        { 0.6626200482157375, -0.7489557207890021 },
        { 0.6691306063588582, -0.7431448254773941 },
        { 0.6755902076156604, -0.737277336810124 },
        { 0.6819983600624986, -0.7313537016191705 },
        { 0.688354575693754, -0.7253743710122875 },
        { 0.6946583704589974, -0.7193398003386511 },
        { 0.700909264299851, -0.7132504491541815 },
        { 0.7071067811865476, -0.7071067811865475 },
        { 0.7132504491541816, -0.7009092642998509 },
        { 0.7193398003386512, -0.6946583704589973 },
        { 0.7253743710122876, -0.6883545756937539 },
        { 0.7313537016191706, -0.6819983600624985 },
        { 0.7372773368101241, -0.6755902076156601 },
        { 0.7431448254773944, -0.6691306063588581 },
        { 0.7489557207890022, -0.6626200482157374 },
        { 0.7547095802227721, -0.6560590289905072 },
        { 0.760405965600031, -0.6494480483301835 },
        { 0.766044443118978, -0.6427876096865393 },
        { 0.77162458338772, -0.636078220277764 },
        { 0.7771459614569709, -0.6293203910498374 },
        { 0.7826081568524139, -0.6225146366376195 },
        { 0.788010753606722, -0.6156614753256582 },
        { 0.7933533402912353, -0.6087614290087205 },
        { 0.7986355100472929, -0.6018150231520482 },
        { 0.8038568606172174, -0.5948227867513411 },
        { 0.8090169943749475, -0.587785252292473 },
        { 0.8141155183563192, -0.5807029557109398 },
        { 0.8191520442889918, -0.573576436351046 },
        { 0.8241261886220157, -0.5664062369248328 },
        { 0.8290375725550417, -0.5591929034707468 },
        { 0.8338858220671682, -0.5519369853120581 },
        { 0.838670567945424, -0.544639035015027 },
        { 0.8433914458128857, -0.5372996083468238 },
        { 0.8480480961564261, -0.5299192642332049 },
        { 0.8526401643540923, -0.5224985647159488 },
        { 0.8571673007021123, -0.515038074910054 },
        { 0.8616291604415258, -0.5075383629607041 },
        { 0.8660254037844387, -0.49999999999999994 },
        { 0.8703556959398997, -0.49242356010346705 },
        { 0.8746197071393959, -0.48480962024633695 },
        { 0.8788171126619654, -0.47715876025960835 },
        { 0.882947592858927, -0.4694715627858907 },
        { 0.8870108331782217, -0.4617486132350338 },
        { 0.8910065241883679, -0.4539904997395467 },
        { 0.8949343616020251, -0.44619781310980866 },
        { 0.898794046299167, -0.4383711467890774 },
        { 0.9025852843498606, -0.4305110968082951 },
        { 0.9063077870366499, -0.4226182617406994 },
        { 0.9099612708765432, -0.41469324265623897 },
        { 0.913545457642601, -0.40673664307580015 },
        { 0.917060074385124, -0.3987490689252461 },
        { 0.9205048534524404, -0.39073112848927366 },
        { 0.9238795325112868, -0.38268343236508967 },
        { 0.9271838545667874, -0.3746065934159119 },
        { 0.9304175679820246, -0.36650122672429725 },
        { 0.9335804264972019, -0.3583679495453001 },
        { 0.9366721892483977, -0.3502073812594674 },
        { 0.9396926207859084, -0.34202014332566855 },
        { 0.9426414910921784, -0.33380685923377085 },
        { 0.9455185755993168, -0.3255681544571567 },
        { 0.9483236552061993, -0.31730465640509203 },
        { 0.9510565162951535, -0.3090169943749474 },
        { 0.9537169507482269, -0.300705799504273 },
        { 0.9563047559630355, -0.2923717047227367 },
        { 0.958819734868193, -0.2840153447039225 },
        { 0.9612616959383189, -0.2756373558169991 },
        { 0.9636304532086231, -0.2672383760782567 },
        { 0.9659258262890683, -0.2588190451025207 },
        { 0.9681476403781077, -0.25038000405444144 },
        { 0.9702957262759965, -0.24192189559966762 },
        { 0.9723699203976766, -0.2334453638559054 },
        { 0.9743700647852352, -0.22495105434386486 },
        { 0.9762960071199334, -0.21643961393810285 },
        { 0.9781476007338057, -0.20791169081775918 },
        { 0.9799247046208296, -0.19936793441719713 },
        { 0.981627183447664, -0.19080899537654464 },
        { 0.9832549075639546, -0.1822355254921474 },
        { 0.984807753012208, -0.17364817766693036 },
        { 0.9862856015372314, -0.16504760586067754 },
        { 0.9876883405951378, -0.15643446504023087 },
        { 0.9890158633619168, -0.1478094111296105 },
        { 0.9902680687415704, -0.1391731009600654 },
        { 0.9914448613738104, -0.13052619222005143 },
        { 0.9925461516413221, -0.12186934340514742 },
        { 0.9935718556765876, -0.11320321376790654 },
        { 0.9945218953682733, -0.10452846326765339 },
        { 0.9953961983671789, -0.09584575252022401 },
        { 0.9961946980917455, -0.08715574274765807 },
        { 0.996917333733128, -0.07845909572784494 },
        { 0.9975640502598243, -0.06975647374412518 },
        { 0.9981347984218669, -0.061048539534856845 },
        { 0.9986295347545738, -0.05233595624294368 },
        { 0.9990482215818578, -0.04361938736533595 },
        { 0.9993908270190958, -0.034899496702500796 },
        { 0.9996573249755573, -0.026176948307873076 },
        { 0.9998476951563913, -0.017452406437283536 },
        { 0.9999619230641713, -0.008726535498373836 },
        { 1.0, 0.0 },
        { 0.9999619230641713, 0.008726535498374058 },
        { 0.9998476951563913, 0.017452406437283536 },
        { 0.9996573249755573, 0.0261769483078733 },
        { 0.9993908270190958, 0.03489949670250102 },
        { 0.9990482215818578, 0.043619387365336174 },
        { 0.9986295347545738, 0.052335956242943904 },
        { 0.9981347984218669, 0.061048539534856845 },
        { 0.9975640502598242, 0.0697564737441254 },
        { 0.996917333733128, 0.07845909572784494 },
        { 0.9961946980917455, 0.08715574274765829 },
        { 0.9953961983671789, 0.09584575252022401 },
        { 0.9945218953682733, 0.10452846326765361 },
        { 0.9935718556765875, 0.11320321376790676 },
        { 0.992546151641322, 0.12186934340514764 },
        { 0.9914448613738104, 0.13052619222005166 },
        { 0.9902680687415704, 0.1391731009600654 },
        { 0.9890158633619168, 0.1478094111296107 },
        { 0.9876883405951378, 0.15643446504023087 },
        { 0.9862856015372314, 0.16504760586067777 },
        { 0.984807753012208, 0.17364817766693036 },
        { 0.9832549075639545, 0.18223552549214758 },
        { 0.981627183447664, 0.19080899537654486 },
        { 0.9799247046208296, 0.19936793441719736 },
        { 0.9781476007338056, 0.2079116908177594 },
        { 0.9762960071199334, 0.21643961393810285 },
        { 0.9743700647852352, 0.2249510543438651 },
        { 0.9723699203976766, 0.2334453638559054 },
        { 0.9702957262759965, 0.24192189559966784 },
        { 0.9681476403781077, 0.25038000405444144 },
        { 0.9659258262890682, 0.2588190451025209 },
        { 0.963630453208623, 0.2672383760782569 },
        { 0.9612616959383188, 0.27563735581699933 },
        { 0.958819734868193, 0.2840153447039227 },
        { 0.9563047559630354, 0.2923717047227369 },
        { 0.9537169507482269, 0.30070579950427323 },
        { 0.9510565162951535, 0.3090169943749474 },
        { 0.9483236552061993, 0.31730465640509226 },
        { 0.9455185755993168, 0.3255681544571567 },
        { 0.9426414910921783, 0.33380685923377107 },
        { 0.9396926207859083, 0.34202014332566877 },
        { 0.9366721892483976, 0.3502073812594676 },
        { 0.9335804264972017, 0.3583679495453003 },
        { 0.9304175679820245, 0.36650122672429747 },
        { 0.9271838545667874, 0.3746065934159121 },
        { 0.9238795325112867, 0.3826834323650898 },
        { 0.9205048534524403, 0.3907311284892738 },
        { 0.917060074385124, 0.3987490689252462 },
        { 0.9135454576426009, 0.4067366430758003 },
        { 0.9099612708765432, 0.4146932426562391 },
        { 0.9063077870366499, 0.42261826174069955 },
        { 0.9025852843498606, 0.4305110968082952 },
        { 0.8987940462991669, 0.43837114678907757 },
        { 0.894934361602025, 0.4461978131098089 },
        { 0.8910065241883679, 0.45399049973954675 },
        { 0.8870108331782216, 0.461748613235034 },
        { 0.882947592858927, 0.4694715627858908 },
        { 0.8788171126619653, 0.4771587602596085 },
        { 0.8746197071393957, 0.48480962024633706 },
        { 0.8703556959398996, 0.4924235601034673 },
        { 0.8660254037844386, 0.5 },
        { 0.8616291604415257, 0.5075383629607043 },
        { 0.8571673007021122, 0.5150380749100543 },
        { 0.8526401643540922, 0.5224985647159488 },
        { 0.848048096156426, 0.529919264233205 },
        { 0.8433914458128857, 0.5372996083468239 },
        { 0.8386705679454239, 0.5446390350150272 },
        { 0.8338858220671682, 0.5519369853120581 },
        { 0.8290375725550416, 0.5591929034707469 },
        { 0.8241261886220156, 0.5664062369248328 },
        { 0.8191520442889917, 0.5735764363510463 },
        { 0.8141155183563191, 0.5807029557109398 },
        { 0.8090169943749475, 0.5877852522924731 },
        { 0.8038568606172174, 0.5948227867513411 },
        { 0.7986355100472927, 0.6018150231520485 },
        { 0.793353340291235, 0.6087614290087208 },
        { 0.7880107536067219, 0.6156614753256583 },
        { 0.7826081568524139, 0.6225146366376195 },
        { 0.7771459614569707, 0.6293203910498376 },
        { 0.7716245833877199, 0.6360782202777641 },
        { 0.766044443118978, 0.6427876096865394 },
        { 0.7604059656000309, 0.6494480483301837 },
        { 0.7547095802227721, 0.6560590289905072 },
        { 0.748955720789002, 0.6626200482157376 },
        { 0.7431448254773941, 0.6691306063588583 },
        { 0.737277336810124, 0.6755902076156602 },
        { 0.7313537016191706, 0.6819983600624985 },
        { 0.7253743710122874, 0.6883545756937541 },
        { 0.719339800338651, 0.6946583704589974 },
        { 0.7132504491541816, 0.7009092642998509 },
        { 0.7071067811865476, 0.7071067811865475 },
        { 0.700909264299851, 0.7132504491541815 },
        { 0.6946583704589971, 0.7193398003386513 },
        { 0.6883545756937539, 0.7253743710122877 },
        { 0.6819983600624985, 0.7313537016191705 },
        { 0.6755902076156604, 0.737277336810124 },
        { 0.669130606358858, 0.7431448254773945 },
        { 0.6626200482157374, 0.7489557207890023 },
        { 0.6560590289905073, 0.754709580222772 },
        { 0.6494480483301837, 0.7604059656000309 },
        { 0.6427876096865395, 0.7660444431189779 },
        { 0.6360782202777637, 0.7716245833877201 },
        { 0.6293203910498374, 0.7771459614569709 },
        { 0.6225146366376195, 0.7826081568524139 },
        { 0.6156614753256583, 0.7880107536067219 },
        { 0.6087614290087204, 0.7933533402912353 },
        { 0.6018150231520482, 0.7986355100472929 },
        { 0.5948227867513413, 0.8038568606172174 },
        { 0.5877852522924731, 0.8090169943749475 },
        { 0.5807029557109399, 0.8141155183563191 },
        { 0.5735764363510459, 0.8191520442889919 },
        { 0.5664062369248327, 0.8241261886220157 },
        { 0.5591929034707468, 0.8290375725550417 },
        { 0.5519369853120583, 0.8338858220671681 },
        { 0.5446390350150269, 0.8386705679454242 },
        { 0.5372996083468237, 0.8433914458128858 },
        { 0.5299192642332049, 0.848048096156426 },
        { 0.5224985647159489, 0.8526401643540922 },
        { 0.5150380749100544, 0.8571673007021122 },
        { 0.507538362960704, 0.8616291604415258 },
        { 0.4999999999999999, 0.8660254037844387 },
        { 0.4924235601034671, 0.8703556959398997 },
        { 0.4848096202463371, 0.8746197071393957 },
        { 0.4771587602596082, 0.8788171126619655 },
        { 0.46947156278589064, 0.882947592858927 },
        { 0.46174861323503386, 0.8870108331782217 },
        { 0.4539904997395468, 0.8910065241883678 },
        { 0.44619781310980894, 0.894934361602025 },
        { 0.43837114678907724, 0.898794046299167 },
        { 0.430511096808295, 0.9025852843498606 },
        { 0.42261826174069944, 0.9063077870366499 },
        { 0.41469324265623914, 0.9099612708765432 },
        { 0.4067366430758, 0.913545457642601 },
        { 0.3987490689252461, 0.9170600743851242 },
        { 0.3907311284892737, 0.9205048534524404 },
        { 0.38268343236508984, 0.9238795325112867 },
        { 0.3746065934159122, 0.9271838545667873 },
        { 0.3665012267242971, 0.9304175679820246 },
        { 0.35836794954530016, 0.9335804264972017 },
        { 0.35020738125946743, 0.9366721892483976 },
        { 0.3420201433256688, 0.9396926207859083 },
        { 0.3338068592337707, 0.9426414910921784 },
        { 0.32556815445715653, 0.9455185755993168 },
        { 0.3173046564050921, 0.9483236552061993 },
        { 0.30901699437494745, 0.9510565162951535 },
        { 0.3007057995042733, 0.9537169507482268 },
        { 0.29237170472273655, 0.9563047559630355 },
        { 0.28401534470392253, 0.958819734868193 },
        { 0.27563735581699916, 0.9612616959383189 },
        { 0.26723837607825696, 0.963630453208623 },
        { 0.2588190451025205, 0.9659258262890683 },
        { 0.2503800040544413, 0.9681476403781079 },
        { 0.24192189559966767, 0.9702957262759965 },
        { 0.23344536385590547, 0.9723699203976766 },
        { 0.22495105434386514, 0.9743700647852352 },
        { 0.21643961393810268, 0.9762960071199334 },
        { 0.20791169081775923, 0.9781476007338057 },
        { 0.1993679344171972, 0.9799247046208296 },
        { 0.19080899537654492, 0.981627183447664 },
};

/**
* Each column of a rotated image contains a certain number of
* pixels from the original image. The following array contains
* these counts.
* Different image sizes have a different pixel counts.
*
*  The following nonzero-pixel counts are generated using scripts/rotations.py.
*/
//#ifdef HD
//float columnPixelCounts[NUM_ROTATIONS][ACC_SIZE] = {
//
//};
//#else
//float columnPixelCounts[NUM_ROTATIONS][ACC_SIZE] = {
//
//};
//#endif